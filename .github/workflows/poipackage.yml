# This is a basic workflow to help you get started with Actions

name: POIPackageAndPublish

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
    paths:
      - 'apis/poi**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
env:
  APPLICATIONPATH: Application
  DOCKERFILEPATH: "apis/poi/web"
  REGISTRYNAME: "openhackwf422ai1acr"
  IMAGENAME: "devopsoh/api-poi"
  STAGINGSLOT: "https://openhackwf422ai1poi-staging.azurewebsites.net/api/healthcheck/poi"
  PRODUCTIONSLOT: "https://openhackwf422ai1poi.azurewebsites.net/api/healthcheck/poi"

jobs:
  build:
    name: Package POI Container and Deploy To Staging
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master

    - name: ACR authentication
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.REGISTRYNAME }}.azurecr.io
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: debug helper
      run: echo '::docker build "$GITHUB_WORKSPACE/${{env.DOCKERFILEPATH}}" -f  "${{env.DOCKERFILEPATH}}/Dockerfile" -t ${{ env.REGISTRYNAME }}.azurecr.io/${{ env.IMAGENAME }}:${{ github.sha }}'

    - name: Docker Build & Push to ACR
      run: |
        docker login ${{ env.REGISTRYNAME }}.azurecr.io --username ${{ secrets.ACR_USERNAME }} --password ${{ secrets.ACR_PASSWORD }}
        docker build "$GITHUB_WORKSPACE/${{env.DOCKERFILEPATH}}" -f  "${{env.DOCKERFILEPATH}}/Dockerfile" -t ${{ env.REGISTRYNAME }}.azurecr.io/${{ env.IMAGENAME }}:${{ github.sha }}
        docker push ${{ env.REGISTRYNAME }}.azurecr.io/${{ env.IMAGENAME }}:${{ github.sha }}

    - uses: azure/webapps-deploy@v2
      with:
        app-name: 'openhackwf422ai1poi'
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_STAGING }}
        images: '${{ env.REGISTRYNAME }}.azurecr.io/${{ env.IMAGENAME }}:${{ github.sha }}'

    - uses: enflo/curl-action@v1.2
      with:
        curl: ${{ env.STAGINGSLOT }}
